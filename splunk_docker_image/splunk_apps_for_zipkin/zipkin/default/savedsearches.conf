[trace data structure]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.custom.type = timeline_app.timeline
display.visualizations.show = 0
display.visualizations.type = singlevalue
request.ui_dispatch_app = zipkin
request.ui_dispatch_view = search
search = traceId=*\
\
| spath path=annotations{0}.timestamp output=start \
| spath path=annotations{0}.value output=start_type \
| spath path=annotations{1}.timestamp output=end\
| spath path=annotations{1}.value output=end_type \
| spath path="annotations{0}.endpoint.serviceName" output=serviceName  \
| spath path="annotations{0}.endpoint.ipv4" output=ipv4  \
| spath path="binaryAnnotations{0}.value" output=url  \
| spath path="binaryAnnotations{1}.value" output=status_code\
| eval serviceName=if(isnotnull(parentId), serviceName, "Overall")\
| eval spanType=if(isnotnull(parentId),"child","parent")\
| eval duration_ms = (end - start)/1000\
| eval start=strftime(start/1000000, "%F %T.%3Q")\
| eval end=strftime(end/1000000, "%F %T.%3Q")\
| fillnull value="" "parentId"\
\
| table parentId traceId id spanType serviceName start end duration_ms ipv4 url status_code start_type end_type  | fields - _raw\
| sort traceId parentId start id


[zipkin_metric_storage]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = */1 * * * *
description = This Saved Search will query the zipkin traces and produce metrics for any serviceName in the metrics index.
dispatch.earliest_time = -5m
dispatch.latest_time = @m
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
display.visualizations.custom.type = timeline_app.timeline
display.visualizations.show = 0
display.visualizations.trellis.splitBy = serviceName
enableSched = 1
request.ui_dispatch_app = zipkin
request.ui_dispatch_view = search
search = traceId=* parentId=*  \
| `format_traces`\
| eval prefix = "zipkin.service."\
| stats avg(duration_ms) as duration_ms, count as count by serviceName, prefix\
\
| mcollect index=zipkinmetrics split=true prefix_field=prefix serviceName
